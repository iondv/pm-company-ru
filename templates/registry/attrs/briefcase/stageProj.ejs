<!-- pm-company-ru\templates\registry\attrs\briefcase\stageProj -->
<%
let basic = item.property('projects');
let url = item.getItemId() ? `${module}/api/${item.getClassName()}/${item.getItemId()}/${basic.getName()}` : '';
let value = prop.getValue();
%>
<div class="form-group <%= cssFromTags(field) %>">
  <div class="col-sm-12">
    <div class="attr-content">
      <div class="attr-content-title">
        <%= field.caption %>
      </div>
      <div id="<%- id %>" class="form-attr-project-chart"
           data-value="<%= value %>"></div>
    </div>
  </div>
</div>

<% stylesheet(`${module}/app-static/css/styles.css`) -%>
<% stylesheet(`${module}/app-vendor/highcharts/css/highcharts.css`) -%>
<% script(`${module}/app-static/js/common.js`) -%>
<% script(`${module}/app-static/js/highcharts.js`) -%>

<script>
  $(document.body).on('highcharts:ready', function () {
    $(document.getElementById('<%- id %>')).each(function () {
      var $container = $(this);
      var url = $container.data('url');
      var value = $container.data('value');
      if (value instanceof Array) {
        var total = 0;
        for (var i = 0; i < value.length; ++i) {
          value[i].count = parseInt(value[i].value) || 0;
          total += value[i].count;
        }
        value = value.map(function (item, index) {
          return {
            name: item.caption,
            count: item.count,
            y: total ? (item.count * 100 / total) : 0,
            colorIndex: index + 1
          };
        });
        setValues(value);
      } else if (url) {
        cooperativeAjax('post', url, {
          start:0,
          length:100,
          eagerLoading: ["vidProject.name"]
        }, function (data) {
          var stages = {
            initiation: {
              name: 'Инициирование',
              count: 0,
              y: 0,
              colorIndex: 1
            },
            implementation: {
              name: 'Реализация',
              count: 0,
              y: 0,
              colorIndex: 2
            },
            completion: {
              name: 'Завершение',
              count: 0,
              y: 0,
              colorIndex: 3
            }
          };
          var total = 0;
          var items = data.data || [];
          for (var i = 0; i < items.length; ++i) {
            var stage = stages[items[i].stage];
            if (stage) {
              stage.count += 1;
              total += 1;
            }
          }
          var values = [];
          if (total) {
            for (var key in stages) {
              if (stages.hasOwnProperty(key)) {
                stages[key].y = stages[key].count * 100 / total;
                values.push(stages[key]);
              }
            }
          }
          setValues(values);
        });
      }

      function setValues (values) {
        Highcharts.chart($container.get(0), {
          credits: false,
          chart: {
            plotBackgroundColor: null,
            plotBorderWidth: null,
            plotShadow: false,
            spacing: [0,0,0,0],
            type: 'pie'
          },
          title: false,
          tooltip: {
            pointFormat: '<b>{point.percentage:.1f}%</b>',
            headerFormat: '<span style="font-size: 12px">{point.key}</span><br/>'
          },
          plotOptions: {
            pie: {
              allowPointSelect: true,
              cursor: 'pointer',
              dataLabels: {
                enabled: false
              },
              showInLegend: true
            }
          },
          legend: {
            align: 'right',
            verticalAlign: 'top',
            layout: 'vertical',
            labelFormat: '{name} - {count}',
            x: 0,
            y: 0
          },
          series: [{
            name: 'Name',
            colorByPoint: true,
            data: values
          }]
        });
      }
    });
  });
</script>