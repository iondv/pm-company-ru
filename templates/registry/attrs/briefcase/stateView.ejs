<!-- pm-company-ru\templates\registry\attrs\briefcase\stateView -->
<%
let basic = item.property('projects');
let url = item.getItemId() ? `${module}/api/${item.getClassName()}/${item.getItemId()}/${basic.getName()}` : '';
%>

<% stylesheet(`${module}/app-static/css/styles.css`) -%>
<% script(`${module}/app-static/js/common.js`) -%>

<div class="form-group <%= cssFromTags(field) %>">
  <div class="col-sm-12">
    <div class="attr-content">
      <div id="<%- id %>" class="alert banner loading" data-url="<%= url %>">
        <div class="banner-title">
          <span class="fa fa-refresh fa-spin"></span>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  $(function () {
    $(document.getElementById('<%- id %>')).each(function () {
      var $container = $(this);
      var url = $container.data('url');
      var activeStages = ['initiation', 'implementation', 'completion'];
      var items = [];
      if (!url) {
        return;
      }
      cooperativeAjax('post', url, {
        start:0,
        length:100,
        eagerLoading: ["vidProject.name"]
      }, function (data) {
        items = data.data;
        var now = moment();
        for (var i = 0; i < items.length; ++i) {
          if (items[i].datePlannedEnd) {
            items[i]._restDatePlannedEnd = moment(items[i].datePlannedEnd).diff(now, 'days');
          }
        }
        var type = 'alert-default', text = 'Закрытые проекты';
        if (isDangerState()) {
          type = 'alert-danger';
          text = 'Просроченные проекты';
        } else if (isWarningState()) {
          type = 'alert-warning';
          text = 'Истекающие проекты';
        } if (isSuccessState()) {
          type = 'alert-success';
          text = 'Проекты в работе';
        }
        $container.removeClass('loading').addClass(type);
        $container.find('.banner-title').html(text);
      });

      function isDangerState () {
        for (var i = 0; i < items.length; ++i) {
          var item = items[i];
          if (activeStages.indexOf(item.stage) !== -1
            && item._restDatePlannedEnd !== undefined
            && item._restDatePlannedEnd < 0) {
            return true;
          }
        }
      }

      function isWarningState () {
        for (var i = 0; i < items.length; ++i) {
          var item = items[i];
          if (activeStages.indexOf(item.stage) !== -1
            && item._restDatePlannedEnd !== undefined
            && item._restDatePlannedEnd < 8) {
            return true;
          }
        }
      }

      function isSuccessState () {
        for (var i = 0; i < items.length; ++i) {
          var item = items[i];
          if (activeStages.indexOf(item.stage) !== -1
            && item._restDatePlannedEnd !== undefined
            && item._restDatePlannedEnd >= 0) {
            return true;
          }
        }
      }
    });
  });
</script>